<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="26" passed="24" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-05-15T15:08:09Z" name="Verify Top Up Functionality" finished-at="2020-05-15T15:08:16Z" duration-ms="7289">
    <groups>
    </groups>
    <test started-at="2020-05-15T15:08:09Z" name="TopupBalanceResponseTest" finished-at="2020-05-15T15:08:16Z" duration-ms="7289">
      <class name="G2.Project.Test.TS12.TC_TopUpBalance_04">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@1efee8e7]" started-at="2020-05-15T15:08:12Z" name="setup" finished-at="2020-05-15T15:08:12Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@1efee8e7]" started-at="2020-05-15T15:08:12Z" name="SettingUp" finished-at="2020-05-15T15:08:14Z" duration-ms="1087" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281325618362]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[S-20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@1efee8e7]" started-at="2020-05-15T15:08:14Z" name="checkHeader" finished-at="2020-05-15T15:08:14Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@1efee8e7]" started-at="2020-05-15T15:08:14Z" name="checkResponseBody" finished-at="2020-05-15T15:08:14Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@1efee8e7]" started-at="2020-05-15T15:08:14Z" name="checkResponseTime" finished-at="2020-05-15T15:08:14Z" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at G2.Project.Base.TestBase.checkResponseTime(TestBase.java:76)
at G2.Project.Test.TS12.TC_TopUpBalance_04.checkResponseTime(TC_TopUpBalance_04.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@1efee8e7]" started-at="2020-05-15T15:08:14Z" name="checkStatusCode" finished-at="2020-05-15T15:08:14Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@1efee8e7]" started-at="2020-05-15T15:08:14Z" name="checkStatusLine" finished-at="2020-05-15T15:08:14Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS12.TC_TopUpBalance_04 -->
      <class name="G2.Project.Test.TS12.TC_TopUpBalance_03">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@1442d7b5]" started-at="2020-05-15T15:08:11Z" name="setup" finished-at="2020-05-15T15:08:11Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@1442d7b5]" started-at="2020-05-15T15:08:11Z" name="SettingUp" finished-at="2020-05-15T15:08:12Z" duration-ms="1253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281905218957]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E-20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@1442d7b5]" started-at="2020-05-15T15:08:12Z" name="checkHeader" finished-at="2020-05-15T15:08:12Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@1442d7b5]" started-at="2020-05-15T15:08:12Z" name="checkResponseBody" finished-at="2020-05-15T15:08:12Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@1442d7b5]" started-at="2020-05-15T15:08:12Z" name="checkResponseTime" finished-at="2020-05-15T15:08:12Z" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at G2.Project.Base.TestBase.checkResponseTime(TestBase.java:76)
at G2.Project.Test.TS12.TC_TopUpBalance_03.checkResponseTime(TC_TopUpBalance_03.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@1442d7b5]" started-at="2020-05-15T15:08:12Z" name="checkStatusCode" finished-at="2020-05-15T15:08:12Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@1442d7b5]" started-at="2020-05-15T15:08:12Z" name="checkStatusLine" finished-at="2020-05-15T15:08:12Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS12.TC_TopUpBalance_03 -->
      <class name="G2.Project.Test.TS12.TC_TopUpBalance_05">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@1ee807c6]" started-at="2020-05-15T15:08:14Z" name="setup" finished-at="2020-05-15T15:08:14Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@1ee807c6]" started-at="2020-05-15T15:08:14Z" name="SettingUp" finished-at="2020-05-15T15:08:15Z" duration-ms="1077" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281325618362]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E-20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@1ee807c6]" started-at="2020-05-15T15:08:15Z" name="checkHeader" finished-at="2020-05-15T15:08:15Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@1ee807c6]" started-at="2020-05-15T15:08:15Z" name="checkResponseBody" finished-at="2020-05-15T15:08:15Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@1ee807c6]" started-at="2020-05-15T15:08:15Z" name="checkResponseTime" finished-at="2020-05-15T15:08:15Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@1ee807c6]" started-at="2020-05-15T15:08:15Z" name="checkStatusCode" finished-at="2020-05-15T15:08:15Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@1ee807c6]" started-at="2020-05-15T15:08:15Z" name="checkStatusLine" finished-at="2020-05-15T15:08:15Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS12.TC_TopUpBalance_05 -->
      <class name="G2.Project.Test.TS12.TC_TopUpBalance_02">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@4e4aea35]" started-at="2020-05-15T15:08:09Z" name="setup" finished-at="2020-05-15T15:08:09Z" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@4e4aea35]" started-at="2020-05-15T15:08:09Z" name="SettingUp" finished-at="2020-05-15T15:08:11Z" duration-ms="2243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281325string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E-20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@4e4aea35]" started-at="2020-05-15T15:08:11Z" name="checkHeader" finished-at="2020-05-15T15:08:11Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@4e4aea35]" started-at="2020-05-15T15:08:11Z" name="checkResponseBody" finished-at="2020-05-15T15:08:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@4e4aea35]" started-at="2020-05-15T15:08:11Z" name="checkResponseTime" finished-at="2020-05-15T15:08:11Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@4e4aea35]" started-at="2020-05-15T15:08:11Z" name="checkStatusCode" finished-at="2020-05-15T15:08:11Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@4e4aea35]" started-at="2020-05-15T15:08:11Z" name="checkStatusLine" finished-at="2020-05-15T15:08:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS12.TC_TopUpBalance_02 -->
      <class name="G2.Project.Test.TS12.TC_TopUpBalance_01">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@76a4d6c]" started-at="2020-05-15T15:08:15Z" name="setup" finished-at="2020-05-15T15:08:15Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@76a4d6c]" started-at="2020-05-15T15:08:15Z" name="SettingUp" finished-at="2020-05-15T15:08:16Z" duration-ms="1152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281325618362]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E-20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkDataBody()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@76a4d6c]" started-at="2020-05-15T15:08:16Z" name="checkDataBody" finished-at="2020-05-15T15:08:16Z" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDataBody -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@76a4d6c]" started-at="2020-05-15T15:08:16Z" name="checkHeader" finished-at="2020-05-15T15:08:16Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@76a4d6c]" started-at="2020-05-15T15:08:16Z" name="checkResponseBody" finished-at="2020-05-15T15:08:16Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@76a4d6c]" started-at="2020-05-15T15:08:16Z" name="checkResponseTime" finished-at="2020-05-15T15:08:16Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@76a4d6c]" started-at="2020-05-15T15:08:16Z" name="checkStatusCode" finished-at="2020-05-15T15:08:16Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@76a4d6c]" started-at="2020-05-15T15:08:16Z" name="checkStatusLine" finished-at="2020-05-15T15:08:16Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS12.TC_TopUpBalance_01 -->
    </test> <!-- TopupBalanceResponseTest -->
  </suite> <!-- Verify Top Up Functionality -->
</testng-results>
