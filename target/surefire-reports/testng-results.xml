<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="159" passed="157" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-05-16T10:27:33Z" name="Testing Parent Suite" finished-at="2020-05-16T10:27:33Z" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- Testing Parent Suite -->
  <suite started-at="2020-05-16T10:26:47Z" name="Verify Login Functionality" finished-at="2020-05-16T10:26:58Z" duration-ms="11398">
    <groups>
    </groups>
    <test started-at="2020-05-16T10:26:47Z" name="LoginResponseTest" finished-at="2020-05-16T10:26:58Z" duration-ms="11398">
      <class name="G2.Project.Test.TS02.TC_Login_02">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS02.TC_Login_02@1176dcec]" started-at="2020-05-16T10:26:49Z" name="setup" finished-at="2020-05-16T10:26:49Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCLogin02(java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS02.TC_Login_02@1176dcec]" started-at="2020-05-16T10:26:49Z" name="setUpTCLogin02" finished-at="2020-05-16T10:26:50Z" duration-ms="1019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6285156362125]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[e-Walet@02]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCLogin02 -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS02.TC_Login_02@1176dcec]" started-at="2020-05-16T10:26:50Z" name="checkHeader" finished-at="2020-05-16T10:26:50Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS02.TC_Login_02@1176dcec]" started-at="2020-05-16T10:26:50Z" name="checkResponseBody" finished-at="2020-05-16T10:26:50Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS02.TC_Login_02@1176dcec]" started-at="2020-05-16T10:26:50Z" name="checkResponseTime" finished-at="2020-05-16T10:26:50Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS02.TC_Login_02@1176dcec]" started-at="2020-05-16T10:26:50Z" name="checkStatusCode" finished-at="2020-05-16T10:26:50Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS02.TC_Login_02@1176dcec]" started-at="2020-05-16T10:26:50Z" name="checkStatusLine" finished-at="2020-05-16T10:26:50Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS02.TC_Login_02 -->
      <class name="G2.Project.Test.TS02.TC_Login_01">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS02.TC_Login_01@23bb8443]" started-at="2020-05-16T10:26:47Z" name="setup" finished-at="2020-05-16T10:26:47Z" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCLogin01(java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS02.TC_Login_01@23bb8443]" started-at="2020-05-16T10:26:47Z" name="setUpTCLogin01" finished-at="2020-05-16T10:26:49Z" duration-ms="2180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281905218958]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[e-Walet@01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCLogin01 -->
        <test-method signature="checkDataBody()[pri:0, instance:G2.Project.Test.TS02.TC_Login_01@23bb8443]" started-at="2020-05-16T10:26:49Z" name="checkDataBody" finished-at="2020-05-16T10:26:49Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDataBody -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS02.TC_Login_01@23bb8443]" started-at="2020-05-16T10:26:49Z" name="checkHeader" finished-at="2020-05-16T10:26:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS02.TC_Login_01@23bb8443]" started-at="2020-05-16T10:26:49Z" name="checkResponseBody" finished-at="2020-05-16T10:26:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS02.TC_Login_01@23bb8443]" started-at="2020-05-16T10:26:49Z" name="checkResponseTime" finished-at="2020-05-16T10:26:49Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS02.TC_Login_01@23bb8443]" started-at="2020-05-16T10:26:49Z" name="checkStatusCode" finished-at="2020-05-16T10:26:49Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS02.TC_Login_01@23bb8443]" started-at="2020-05-16T10:26:49Z" name="checkStatusLine" finished-at="2020-05-16T10:26:49Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS02.TC_Login_01 -->
      <class name="G2.Project.Test.TS02.TC_Login_04">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS02.TC_Login_04@4ba2ca36]" started-at="2020-05-16T10:26:52Z" name="setup" finished-at="2020-05-16T10:26:52Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCLogin04(java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS02.TC_Login_04@4ba2ca36]" started-at="2020-05-16T10:26:52Z" name="setUpTCLogin04" finished-at="2020-05-16T10:26:53Z" duration-ms="1070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6285156362125]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ewalet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCLogin04 -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS02.TC_Login_04@4ba2ca36]" started-at="2020-05-16T10:26:53Z" name="checkHeader" finished-at="2020-05-16T10:26:53Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS02.TC_Login_04@4ba2ca36]" started-at="2020-05-16T10:26:53Z" name="checkResponseBody" finished-at="2020-05-16T10:26:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS02.TC_Login_04@4ba2ca36]" started-at="2020-05-16T10:26:53Z" name="checkResponseTime" finished-at="2020-05-16T10:26:53Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS02.TC_Login_04@4ba2ca36]" started-at="2020-05-16T10:26:53Z" name="checkStatusCode" finished-at="2020-05-16T10:26:53Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS02.TC_Login_04@4ba2ca36]" started-at="2020-05-16T10:26:53Z" name="checkStatusLine" finished-at="2020-05-16T10:26:53Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS02.TC_Login_04 -->
      <class name="G2.Project.Test.TS02.TC_Login_03">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS02.TC_Login_03@120d6fe6]" started-at="2020-05-16T10:26:50Z" name="setup" finished-at="2020-05-16T10:26:50Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCLogin03(java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS02.TC_Login_03@120d6fe6]" started-at="2020-05-16T10:26:50Z" name="setUpTCLogin03" finished-at="2020-05-16T10:26:52Z" duration-ms="1273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281905218958]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ewalet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCLogin03 -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS02.TC_Login_03@120d6fe6]" started-at="2020-05-16T10:26:52Z" name="checkHeader" finished-at="2020-05-16T10:26:52Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS02.TC_Login_03@120d6fe6]" started-at="2020-05-16T10:26:52Z" name="checkResponseBody" finished-at="2020-05-16T10:26:52Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS02.TC_Login_03@120d6fe6]" started-at="2020-05-16T10:26:52Z" name="checkResponseTime" finished-at="2020-05-16T10:26:52Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS02.TC_Login_03@120d6fe6]" started-at="2020-05-16T10:26:52Z" name="checkStatusCode" finished-at="2020-05-16T10:26:52Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS02.TC_Login_03@120d6fe6]" started-at="2020-05-16T10:26:52Z" name="checkStatusLine" finished-at="2020-05-16T10:26:52Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS02.TC_Login_03 -->
      <class name="G2.Project.Test.TS02.TC_Login_06">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS02.TC_Login_06@1372ed45]" started-at="2020-05-16T10:26:54Z" name="setup" finished-at="2020-05-16T10:26:54Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCLogin06(java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS02.TC_Login_06@1372ed45]" started-at="2020-05-16T10:26:54Z" name="setUpTCLogin06" finished-at="2020-05-16T10:26:55Z" duration-ms="1084" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ewalet]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCLogin06 -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS02.TC_Login_06@1372ed45]" started-at="2020-05-16T10:26:55Z" name="checkHeader" finished-at="2020-05-16T10:26:55Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS02.TC_Login_06@1372ed45]" started-at="2020-05-16T10:26:55Z" name="checkResponseBody" finished-at="2020-05-16T10:26:55Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS02.TC_Login_06@1372ed45]" started-at="2020-05-16T10:26:55Z" name="checkResponseTime" finished-at="2020-05-16T10:26:55Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS02.TC_Login_06@1372ed45]" started-at="2020-05-16T10:26:55Z" name="checkStatusCode" finished-at="2020-05-16T10:26:55Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS02.TC_Login_06@1372ed45]" started-at="2020-05-16T10:26:55Z" name="checkStatusLine" finished-at="2020-05-16T10:26:55Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS02.TC_Login_06 -->
      <class name="G2.Project.Test.TS02.TC_Login_05">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS02.TC_Login_05@3444d69d]" started-at="2020-05-16T10:26:53Z" name="setup" finished-at="2020-05-16T10:26:53Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCLogin05(java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS02.TC_Login_05@3444d69d]" started-at="2020-05-16T10:26:53Z" name="setUpTCLogin05" finished-at="2020-05-16T10:26:54Z" duration-ms="1055" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[e-Walet@01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCLogin05 -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS02.TC_Login_05@3444d69d]" started-at="2020-05-16T10:26:54Z" name="checkHeader" finished-at="2020-05-16T10:26:54Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS02.TC_Login_05@3444d69d]" started-at="2020-05-16T10:26:54Z" name="checkResponseBody" finished-at="2020-05-16T10:26:54Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS02.TC_Login_05@3444d69d]" started-at="2020-05-16T10:26:54Z" name="checkResponseTime" finished-at="2020-05-16T10:26:54Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS02.TC_Login_05@3444d69d]" started-at="2020-05-16T10:26:54Z" name="checkStatusCode" finished-at="2020-05-16T10:26:54Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS02.TC_Login_05@3444d69d]" started-at="2020-05-16T10:26:54Z" name="checkStatusLine" finished-at="2020-05-16T10:26:54Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS02.TC_Login_05 -->
      <class name="G2.Project.Test.TS02.TC_Login_08">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS02.TC_Login_08@37574691]" started-at="2020-05-16T10:26:56Z" name="setup" finished-at="2020-05-16T10:26:56Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCLogin08(java.lang.String)[pri:0, instance:G2.Project.Test.TS02.TC_Login_08@37574691]" started-at="2020-05-16T10:26:56Z" name="setUpTCLogin08" finished-at="2020-05-16T10:26:57Z" duration-ms="1110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[e-Walet@01]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCLogin08 -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS02.TC_Login_08@37574691]" started-at="2020-05-16T10:26:57Z" name="checkHeader" finished-at="2020-05-16T10:26:57Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS02.TC_Login_08@37574691]" started-at="2020-05-16T10:26:57Z" name="checkResponseBody" finished-at="2020-05-16T10:26:57Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS02.TC_Login_08@37574691]" started-at="2020-05-16T10:26:57Z" name="checkResponseTime" finished-at="2020-05-16T10:26:57Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS02.TC_Login_08@37574691]" started-at="2020-05-16T10:26:57Z" name="checkStatusCode" finished-at="2020-05-16T10:26:57Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS02.TC_Login_08@37574691]" started-at="2020-05-16T10:26:57Z" name="checkStatusLine" finished-at="2020-05-16T10:26:57Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS02.TC_Login_08 -->
      <class name="G2.Project.Test.TS02.TC_Login_07">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS02.TC_Login_07@6a79c292]" started-at="2020-05-16T10:26:55Z" name="setup" finished-at="2020-05-16T10:26:55Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCLogin07(java.lang.String)[pri:0, instance:G2.Project.Test.TS02.TC_Login_07@6a79c292]" started-at="2020-05-16T10:26:55Z" name="setUpTCLogin07" finished-at="2020-05-16T10:26:56Z" duration-ms="1155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281905218958]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCLogin07 -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS02.TC_Login_07@6a79c292]" started-at="2020-05-16T10:26:56Z" name="checkHeader" finished-at="2020-05-16T10:26:56Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS02.TC_Login_07@6a79c292]" started-at="2020-05-16T10:26:56Z" name="checkResponseBody" finished-at="2020-05-16T10:26:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS02.TC_Login_07@6a79c292]" started-at="2020-05-16T10:26:56Z" name="checkResponseTime" finished-at="2020-05-16T10:26:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS02.TC_Login_07@6a79c292]" started-at="2020-05-16T10:26:56Z" name="checkStatusCode" finished-at="2020-05-16T10:26:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS02.TC_Login_07@6a79c292]" started-at="2020-05-16T10:26:56Z" name="checkStatusLine" finished-at="2020-05-16T10:26:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS02.TC_Login_07 -->
      <class name="G2.Project.Test.TS02.TC_Login_09">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS02.TC_Login_09@25359ed8]" started-at="2020-05-16T10:26:57Z" name="setup" finished-at="2020-05-16T10:26:57Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCLogin09()[pri:0, instance:G2.Project.Test.TS02.TC_Login_09@25359ed8]" started-at="2020-05-16T10:26:57Z" name="setUpTCLogin09" finished-at="2020-05-16T10:26:58Z" duration-ms="1107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCLogin09 -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS02.TC_Login_09@25359ed8]" started-at="2020-05-16T10:26:58Z" name="checkHeader" finished-at="2020-05-16T10:26:58Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS02.TC_Login_09@25359ed8]" started-at="2020-05-16T10:26:58Z" name="checkResponseBody" finished-at="2020-05-16T10:26:58Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS02.TC_Login_09@25359ed8]" started-at="2020-05-16T10:26:58Z" name="checkResponseTime" finished-at="2020-05-16T10:26:58Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS02.TC_Login_09@25359ed8]" started-at="2020-05-16T10:26:58Z" name="checkStatusCode" finished-at="2020-05-16T10:26:58Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS02.TC_Login_09@25359ed8]" started-at="2020-05-16T10:26:58Z" name="checkStatusLine" finished-at="2020-05-16T10:26:58Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS02.TC_Login_09 -->
    </test> <!-- LoginResponseTest -->
  </suite> <!-- Verify Login Functionality -->
  <suite started-at="2020-05-16T10:27:16Z" name="Verify Top Up Functionality (1)" finished-at="2020-05-16T10:27:21Z" duration-ms="5697">
    <groups>
    </groups>
    <test started-at="2020-05-16T10:27:16Z" name="TopupBalanceResponseTest" finished-at="2020-05-16T10:27:21Z" duration-ms="5697">
      <class name="G2.Project.Test.TS12.TC_TopUpBalance_04">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@3bbc39f8]" started-at="2020-05-16T10:27:18Z" name="setup" finished-at="2020-05-16T10:27:18Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@3bbc39f8]" started-at="2020-05-16T10:27:18Z" name="SettingUp" finished-at="2020-05-16T10:27:19Z" duration-ms="1112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281905218958]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[S-20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@3bbc39f8]" started-at="2020-05-16T10:27:19Z" name="checkHeader" finished-at="2020-05-16T10:27:19Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@3bbc39f8]" started-at="2020-05-16T10:27:19Z" name="checkResponseBody" finished-at="2020-05-16T10:27:19Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@3bbc39f8]" started-at="2020-05-16T10:27:19Z" name="checkResponseTime" finished-at="2020-05-16T10:27:19Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@3bbc39f8]" started-at="2020-05-16T10:27:19Z" name="checkStatusCode" finished-at="2020-05-16T10:27:19Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_04@3bbc39f8]" started-at="2020-05-16T10:27:19Z" name="checkStatusLine" finished-at="2020-05-16T10:27:19Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS12.TC_TopUpBalance_04 -->
      <class name="G2.Project.Test.TS12.TC_TopUpBalance_03">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@5ea434c8]" started-at="2020-05-16T10:27:17Z" name="setup" finished-at="2020-05-16T10:27:17Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@5ea434c8]" started-at="2020-05-16T10:27:17Z" name="SettingUp" finished-at="2020-05-16T10:27:18Z" duration-ms="1231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281905218957]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E-20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@5ea434c8]" started-at="2020-05-16T10:27:18Z" name="checkHeader" finished-at="2020-05-16T10:27:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@5ea434c8]" started-at="2020-05-16T10:27:18Z" name="checkResponseBody" finished-at="2020-05-16T10:27:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@5ea434c8]" started-at="2020-05-16T10:27:18Z" name="checkResponseTime" finished-at="2020-05-16T10:27:18Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@5ea434c8]" started-at="2020-05-16T10:27:18Z" name="checkStatusCode" finished-at="2020-05-16T10:27:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_03@5ea434c8]" started-at="2020-05-16T10:27:18Z" name="checkStatusLine" finished-at="2020-05-16T10:27:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS12.TC_TopUpBalance_03 -->
      <class name="G2.Project.Test.TS12.TC_TopUpBalance_05">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@4ae3c1cd]" started-at="2020-05-16T10:27:19Z" name="setup" finished-at="2020-05-16T10:27:19Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@4ae3c1cd]" started-at="2020-05-16T10:27:19Z" name="SettingUp" finished-at="2020-05-16T10:27:20Z" duration-ms="1094" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281905218958]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E-20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@4ae3c1cd]" started-at="2020-05-16T10:27:20Z" name="checkHeader" finished-at="2020-05-16T10:27:20Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@4ae3c1cd]" started-at="2020-05-16T10:27:20Z" name="checkResponseBody" finished-at="2020-05-16T10:27:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@4ae3c1cd]" started-at="2020-05-16T10:27:20Z" name="checkResponseTime" finished-at="2020-05-16T10:27:20Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@4ae3c1cd]" started-at="2020-05-16T10:27:20Z" name="checkStatusCode" finished-at="2020-05-16T10:27:20Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_05@4ae3c1cd]" started-at="2020-05-16T10:27:20Z" name="checkStatusLine" finished-at="2020-05-16T10:27:20Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS12.TC_TopUpBalance_05 -->
      <class name="G2.Project.Test.TS12.TC_TopUpBalance_02">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@5d47c63f]" started-at="2020-05-16T10:27:16Z" name="setup" finished-at="2020-05-16T10:27:16Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@5d47c63f]" started-at="2020-05-16T10:27:16Z" name="SettingUp" finished-at="2020-05-16T10:27:17Z" duration-ms="947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281325string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E-20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@5d47c63f]" started-at="2020-05-16T10:27:17Z" name="checkHeader" finished-at="2020-05-16T10:27:17Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@5d47c63f]" started-at="2020-05-16T10:27:17Z" name="checkResponseBody" finished-at="2020-05-16T10:27:17Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@5d47c63f]" started-at="2020-05-16T10:27:17Z" name="checkResponseTime" finished-at="2020-05-16T10:27:17Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@5d47c63f]" started-at="2020-05-16T10:27:17Z" name="checkStatusCode" finished-at="2020-05-16T10:27:17Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_02@5d47c63f]" started-at="2020-05-16T10:27:17Z" name="checkStatusLine" finished-at="2020-05-16T10:27:17Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS12.TC_TopUpBalance_02 -->
      <class name="G2.Project.Test.TS12.TC_TopUpBalance_01">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@29f69090]" started-at="2020-05-16T10:27:20Z" name="setup" finished-at="2020-05-16T10:27:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@29f69090]" started-at="2020-05-16T10:27:20Z" name="SettingUp" finished-at="2020-05-16T10:27:21Z" duration-ms="1214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6281905218958]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E-20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkDataBody()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@29f69090]" started-at="2020-05-16T10:27:21Z" name="checkDataBody" finished-at="2020-05-16T10:27:21Z" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDataBody -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@29f69090]" started-at="2020-05-16T10:27:21Z" name="checkHeader" finished-at="2020-05-16T10:27:21Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@29f69090]" started-at="2020-05-16T10:27:21Z" name="checkResponseBody" finished-at="2020-05-16T10:27:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@29f69090]" started-at="2020-05-16T10:27:21Z" name="checkResponseTime" finished-at="2020-05-16T10:27:21Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@29f69090]" started-at="2020-05-16T10:27:21Z" name="checkStatusCode" finished-at="2020-05-16T10:27:21Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS12.TC_TopUpBalance_01@29f69090]" started-at="2020-05-16T10:27:21Z" name="checkStatusLine" finished-at="2020-05-16T10:27:21Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS12.TC_TopUpBalance_01 -->
    </test> <!-- TopupBalanceResponseTest -->
  </suite> <!-- Verify Top Up Functionality (1) -->
  <suite started-at="2020-05-16T10:27:04Z" name="Verify GetBalanceCatalog Functionality" finished-at="2020-05-16T10:27:06Z" duration-ms="2314">
    <groups>
    </groups>
    <test started-at="2020-05-16T10:27:04Z" name="GetBalanceCatalogResponseTest" finished-at="2020-05-16T10:27:06Z" duration-ms="2314">
      <class name="G2.Project.Test.TS08.TC_GetBalanceCatalog_02">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_02@35fc6dc4]" started-at="2020-05-16T10:27:05Z" name="setup" finished-at="2020-05-16T10:27:05Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCGetBalanceCatalog02(java.lang.String)[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_02@35fc6dc4]" started-at="2020-05-16T10:27:05Z" name="setUpTCGetBalanceCatalog02" finished-at="2020-05-16T10:27:06Z" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MjgxOTA1MjE4OTU4IiwiZXhwIjoxNTg5NDQ3NDg3LCJpYXQiOjE1ODk0Mjk0ODd9.Qtiv_EvtO81s14UxWyBYf7XTwrMlOhigpnQNtQE-BR8f0Xb1I5onftFT-xDFRU2TXv9VMheQpknSH_o8OD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCGetBalanceCatalog02 -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_02@35fc6dc4]" started-at="2020-05-16T10:27:06Z" name="checkResponseBody" finished-at="2020-05-16T10:27:06Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_02@35fc6dc4]" started-at="2020-05-16T10:27:06Z" name="checkResponseTime" finished-at="2020-05-16T10:27:06Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_02@35fc6dc4]" started-at="2020-05-16T10:27:06Z" name="checkStatusCode" finished-at="2020-05-16T10:27:06Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_02@35fc6dc4]" started-at="2020-05-16T10:27:06Z" name="checkStatusLine" finished-at="2020-05-16T10:27:06Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS08.TC_GetBalanceCatalog_02 -->
      <class name="G2.Project.Test.TS08.TC_GetBalanceCatalog_01">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_01@77e4c80f]" started-at="2020-05-16T10:27:04Z" name="setup" finished-at="2020-05-16T10:27:04Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCGetBalanceCatalog01()[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_01@77e4c80f]" started-at="2020-05-16T10:27:04Z" name="setUpTCGetBalanceCatalog01" finished-at="2020-05-16T10:27:05Z" duration-ms="1282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCGetBalanceCatalog01 -->
        <test-method signature="checkDataBody()[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_01@77e4c80f]" started-at="2020-05-16T10:27:05Z" name="checkDataBody" finished-at="2020-05-16T10:27:05Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDataBody -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_01@77e4c80f]" started-at="2020-05-16T10:27:05Z" name="checkHeader" finished-at="2020-05-16T10:27:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_01@77e4c80f]" started-at="2020-05-16T10:27:05Z" name="checkResponseBody" finished-at="2020-05-16T10:27:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_01@77e4c80f]" started-at="2020-05-16T10:27:05Z" name="checkResponseTime" finished-at="2020-05-16T10:27:05Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_01@77e4c80f]" started-at="2020-05-16T10:27:05Z" name="checkStatusCode" finished-at="2020-05-16T10:27:05Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS08.TC_GetBalanceCatalog_01@77e4c80f]" started-at="2020-05-16T10:27:05Z" name="checkStatusLine" finished-at="2020-05-16T10:27:05Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS08.TC_GetBalanceCatalog_01 -->
    </test> <!-- GetBalanceCatalogResponseTest -->
  </suite> <!-- Verify GetBalanceCatalog Functionality -->
  <suite started-at="2020-05-16T10:27:13Z" name="Verify Top Up Functionality (0)" finished-at="2020-05-16T10:27:16Z" duration-ms="2611">
    <groups>
    </groups>
    <test started-at="2020-05-16T10:27:13Z" name="GetTopupHistoryResponseTest" finished-at="2020-05-16T10:27:16Z" duration-ms="2611">
      <class name="G2.Project.Test.TS11.TC_GetTopUpHistory_01">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_01@2d2e5f00]" started-at="2020-05-16T10:27:14Z" name="setup" finished-at="2020-05-16T10:27:14Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="settingUp()[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_01@2d2e5f00]" started-at="2020-05-16T10:27:14Z" name="settingUp" finished-at="2020-05-16T10:27:16Z" duration-ms="1491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- settingUp -->
        <test-method signature="checkDataBody()[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_01@2d2e5f00]" started-at="2020-05-16T10:27:16Z" name="checkDataBody" finished-at="2020-05-16T10:27:16Z" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDataBody -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_01@2d2e5f00]" started-at="2020-05-16T10:27:16Z" name="checkHeader" finished-at="2020-05-16T10:27:16Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_01@2d2e5f00]" started-at="2020-05-16T10:27:16Z" name="checkResponseBody" finished-at="2020-05-16T10:27:16Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_01@2d2e5f00]" started-at="2020-05-16T10:27:16Z" name="checkResponseTime" finished-at="2020-05-16T10:27:16Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_01@2d2e5f00]" started-at="2020-05-16T10:27:16Z" name="checkStatusCode" finished-at="2020-05-16T10:27:16Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_01@2d2e5f00]" started-at="2020-05-16T10:27:16Z" name="checkStatusLine" finished-at="2020-05-16T10:27:16Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS11.TC_GetTopUpHistory_01 -->
      <class name="G2.Project.Test.TS11.TC_GetTopUpHistory_02">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_02@8b96fde]" started-at="2020-05-16T10:27:13Z" name="setup" finished-at="2020-05-16T10:27:13Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="settingUp(java.lang.String)[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_02@8b96fde]" started-at="2020-05-16T10:27:13Z" name="settingUp" finished-at="2020-05-16T10:27:14Z" duration-ms="1051" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MjgxOTA1MjE4OTU4IiwiZXhwIjoxNTg5NDQ3NDg3LCJpYXQiOjE1ODk0Mjk0ODd9.Qtiv_EvtO81s14UxWyBYf7XTwrMlOhigpnQNtQE-BR8f0Xb1I5onftFT-xDFRU2TXv9VMheQpknSH_o8OD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- settingUp -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_02@8b96fde]" started-at="2020-05-16T10:27:14Z" name="checkResponseBody" finished-at="2020-05-16T10:27:14Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_02@8b96fde]" started-at="2020-05-16T10:27:14Z" name="checkResponseTime" finished-at="2020-05-16T10:27:14Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_02@8b96fde]" started-at="2020-05-16T10:27:14Z" name="checkStatusCode" finished-at="2020-05-16T10:27:14Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS11.TC_GetTopUpHistory_02@8b96fde]" started-at="2020-05-16T10:27:14Z" name="checkStatusLine" finished-at="2020-05-16T10:27:14Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS11.TC_GetTopUpHistory_02 -->
    </test> <!-- GetTopupHistoryResponseTest -->
  </suite> <!-- Verify Top Up Functionality (0) -->
  <suite started-at="2020-05-16T10:27:21Z" name="Verify Top Up Functionality (2)" finished-at="2020-05-16T10:27:32Z" duration-ms="11008">
    <groups>
    </groups>
    <test started-at="2020-05-16T10:27:21Z" name="UploadReceiptResponseTest" finished-at="2020-05-16T10:27:32Z" duration-ms="11008">
      <class name="G2.Project.Test.TS13.TC_TransferReceipt_06">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_06@5b0abc94]" started-at="2020-05-16T10:27:27Z" name="setup" finished-at="2020-05-16T10:27:27Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_06@5b0abc94]" started-at="2020-05-16T10:27:27Z" name="SettingUp" finished-at="2020-05-16T10:27:29Z" duration-ms="2118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_06@5b0abc94]" started-at="2020-05-16T10:27:29Z" name="checkResponseBody" finished-at="2020-05-16T10:27:29Z" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at G2.Project.Base.TestBase.checkBody(TestBase.java:60)
at G2.Project.Test.TS13.TC_TransferReceipt_06.checkResponseBody(TC_TransferReceipt_06.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_06@5b0abc94]" started-at="2020-05-16T10:27:29Z" name="checkResponseTime" finished-at="2020-05-16T10:27:29Z" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at G2.Project.Base.TestBase.checkResponseTime(TestBase.java:76)
at G2.Project.Test.TS13.TC_TransferReceipt_06.checkResponseTime(TC_TransferReceipt_06.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_06@5b0abc94]" started-at="2020-05-16T10:27:29Z" name="checkStatusCode" finished-at="2020-05-16T10:27:29Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_06@5b0abc94]" started-at="2020-05-16T10:27:29Z" name="checkStatusLine" finished-at="2020-05-16T10:27:29Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS13.TC_TransferReceipt_06 -->
      <class name="G2.Project.Test.TS13.TC_TransferReceipt_05">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_05@7d68ef40]" started-at="2020-05-16T10:27:26Z" name="setup" finished-at="2020-05-16T10:27:26Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_05@7d68ef40]" started-at="2020-05-16T10:27:26Z" name="SettingUp" finished-at="2020-05-16T10:27:27Z" duration-ms="1119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_05@7d68ef40]" started-at="2020-05-16T10:27:27Z" name="checkResponseBody" finished-at="2020-05-16T10:27:27Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_05@7d68ef40]" started-at="2020-05-16T10:27:27Z" name="checkResponseTime" finished-at="2020-05-16T10:27:27Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_05@7d68ef40]" started-at="2020-05-16T10:27:27Z" name="checkStatusCode" finished-at="2020-05-16T10:27:27Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_05@7d68ef40]" started-at="2020-05-16T10:27:27Z" name="checkStatusLine" finished-at="2020-05-16T10:27:27Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS13.TC_TransferReceipt_05 -->
      <class name="G2.Project.Test.TS13.TC_TransferReceipt_03">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_03@123f1134]" started-at="2020-05-16T10:27:22Z" name="setup" finished-at="2020-05-16T10:27:22Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_03@123f1134]" started-at="2020-05-16T10:27:22Z" name="SettingUp" finished-at="2020-05-16T10:27:26Z" duration-ms="3547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_03@123f1134]" started-at="2020-05-16T10:27:26Z" name="checkHeader" finished-at="2020-05-16T10:27:26Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_03@123f1134]" started-at="2020-05-16T10:27:26Z" name="checkResponseBody" finished-at="2020-05-16T10:27:26Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_03@123f1134]" started-at="2020-05-16T10:27:26Z" name="checkResponseTime" finished-at="2020-05-16T10:27:26Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_03@123f1134]" started-at="2020-05-16T10:27:26Z" name="checkStatusCode" finished-at="2020-05-16T10:27:26Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_03@123f1134]" started-at="2020-05-16T10:27:26Z" name="checkStatusLine" finished-at="2020-05-16T10:27:26Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS13.TC_TransferReceipt_03 -->
      <class name="G2.Project.Test.TS13.TC_TransferReceipt_01">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_01@1f1c7bf6]" started-at="2020-05-16T10:27:31Z" name="setup" finished-at="2020-05-16T10:27:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_01@1f1c7bf6]" started-at="2020-05-16T10:27:31Z" name="SettingUp" finished-at="2020-05-16T10:27:32Z" duration-ms="1705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_01@1f1c7bf6]" started-at="2020-05-16T10:27:32Z" name="checkHeader" finished-at="2020-05-16T10:27:32Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_01@1f1c7bf6]" started-at="2020-05-16T10:27:32Z" name="checkResponseBody" finished-at="2020-05-16T10:27:32Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_01@1f1c7bf6]" started-at="2020-05-16T10:27:32Z" name="checkResponseTime" finished-at="2020-05-16T10:27:32Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_01@1f1c7bf6]" started-at="2020-05-16T10:27:32Z" name="checkStatusCode" finished-at="2020-05-16T10:27:32Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_01@1f1c7bf6]" started-at="2020-05-16T10:27:32Z" name="checkStatusLine" finished-at="2020-05-16T10:27:32Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS13.TC_TransferReceipt_01 -->
      <class name="G2.Project.Test.TS13.Setting">
        <test-method is-config="true" signature="SettingUp()[pri:0, instance:G2.Project.Test.TS13.Setting@482cd91f]" started-at="2020-05-16T10:27:21Z" name="SettingUp" finished-at="2020-05-16T10:27:22Z" duration-ms="918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
      </class> <!-- G2.Project.Test.TS13.Setting -->
      <class name="G2.Project.Test.TS13.TC_TransferReceipt_07">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_07@75c072cb]" started-at="2020-05-16T10:27:29Z" name="setup" finished-at="2020-05-16T10:27:29Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_07@75c072cb]" started-at="2020-05-16T10:27:29Z" name="SettingUp" finished-at="2020-05-16T10:27:31Z" duration-ms="1514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_07@75c072cb]" started-at="2020-05-16T10:27:31Z" name="checkResponseBody" finished-at="2020-05-16T10:27:31Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_07@75c072cb]" started-at="2020-05-16T10:27:31Z" name="checkResponseTime" finished-at="2020-05-16T10:27:31Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_07@75c072cb]" started-at="2020-05-16T10:27:31Z" name="checkStatusCode" finished-at="2020-05-16T10:27:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS13.TC_TransferReceipt_07@75c072cb]" started-at="2020-05-16T10:27:31Z" name="checkStatusLine" finished-at="2020-05-16T10:27:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS13.TC_TransferReceipt_07 -->
    </test> <!-- UploadReceiptResponseTest -->
  </suite> <!-- Verify Top Up Functionality (2) -->
  <suite started-at="2020-05-16T10:26:59Z" name="Verify GetUserProfile Functionality" finished-at="2020-05-16T10:27:01Z" duration-ms="2449">
    <groups>
    </groups>
    <test started-at="2020-05-16T10:26:59Z" name="GetUserProfileResponseTest" finished-at="2020-05-16T10:27:01Z" duration-ms="2449">
      <class name="G2.Project.Test.TS06.TC_GetUserProfile_01">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_01@70b0b186]" started-at="2020-05-16T10:26:59Z" name="setup" finished-at="2020-05-16T10:26:59Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCGetUserProfile01()[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_01@70b0b186]" started-at="2020-05-16T10:26:59Z" name="setUpTCGetUserProfile01" finished-at="2020-05-16T10:27:00Z" duration-ms="1282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCGetUserProfile01 -->
        <test-method signature="checkDataBody()[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_01@70b0b186]" started-at="2020-05-16T10:27:00Z" name="checkDataBody" finished-at="2020-05-16T10:27:00Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDataBody -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_01@70b0b186]" started-at="2020-05-16T10:27:00Z" name="checkHeader" finished-at="2020-05-16T10:27:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_01@70b0b186]" started-at="2020-05-16T10:27:00Z" name="checkResponseBody" finished-at="2020-05-16T10:27:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_01@70b0b186]" started-at="2020-05-16T10:27:00Z" name="checkResponseTime" finished-at="2020-05-16T10:27:00Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_01@70b0b186]" started-at="2020-05-16T10:27:00Z" name="checkStatusCode" finished-at="2020-05-16T10:27:00Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_01@70b0b186]" started-at="2020-05-16T10:27:00Z" name="checkStatusLine" finished-at="2020-05-16T10:27:00Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS06.TC_GetUserProfile_01 -->
      <class name="G2.Project.Test.TS06.TC_GetUserProfile_02">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_02@ba8d91c]" started-at="2020-05-16T10:27:00Z" name="setup" finished-at="2020-05-16T10:27:00Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCGetUserProfile02(java.lang.String)[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_02@ba8d91c]" started-at="2020-05-16T10:27:00Z" name="setUpTCGetUserProfile02" finished-at="2020-05-16T10:27:01Z" duration-ms="1104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MjgxOTA1MjE4OTU4IiwiZXhwIjoxNTg5NDQ3NDg3LCJpYXQiOjE1ODk0Mjk0ODd9.Qtiv_EvtO81s14UxWyBYf7XTwrMlOhigpnQNtQE-BR8f0Xb1I5onftFT-xDFRU2TXv9VMheQpknSH_o8OD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCGetUserProfile02 -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_02@ba8d91c]" started-at="2020-05-16T10:27:01Z" name="checkResponseBody" finished-at="2020-05-16T10:27:01Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_02@ba8d91c]" started-at="2020-05-16T10:27:01Z" name="checkResponseTime" finished-at="2020-05-16T10:27:01Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_02@ba8d91c]" started-at="2020-05-16T10:27:01Z" name="checkStatusCode" finished-at="2020-05-16T10:27:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS06.TC_GetUserProfile_02@ba8d91c]" started-at="2020-05-16T10:27:01Z" name="checkStatusLine" finished-at="2020-05-16T10:27:01Z" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS06.TC_GetUserProfile_02 -->
    </test> <!-- GetUserProfileResponseTest -->
  </suite> <!-- Verify GetUserProfile Functionality -->
  <suite started-at="2020-05-16T10:27:01Z" name="Verify GetUserBalance Functionality" finished-at="2020-05-16T10:27:04Z" duration-ms="2373">
    <groups>
    </groups>
    <test started-at="2020-05-16T10:27:01Z" name="GetUserBalanceResponseTest" finished-at="2020-05-16T10:27:04Z" duration-ms="2373">
      <class name="G2.Project.Test.TS07.TC_GetUserBalance_01">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_01@69b794e2]" started-at="2020-05-16T10:27:01Z" name="setup" finished-at="2020-05-16T10:27:01Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCGetUserBalance01()[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_01@69b794e2]" started-at="2020-05-16T10:27:01Z" name="setUpTCGetUserBalance01" finished-at="2020-05-16T10:27:03Z" duration-ms="1441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCGetUserBalance01 -->
        <test-method signature="checkDataBody()[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_01@69b794e2]" started-at="2020-05-16T10:27:03Z" name="checkDataBody" finished-at="2020-05-16T10:27:03Z" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDataBody -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_01@69b794e2]" started-at="2020-05-16T10:27:03Z" name="checkHeader" finished-at="2020-05-16T10:27:03Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_01@69b794e2]" started-at="2020-05-16T10:27:03Z" name="checkResponseBody" finished-at="2020-05-16T10:27:03Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_01@69b794e2]" started-at="2020-05-16T10:27:03Z" name="checkResponseTime" finished-at="2020-05-16T10:27:03Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_01@69b794e2]" started-at="2020-05-16T10:27:03Z" name="checkStatusCode" finished-at="2020-05-16T10:27:03Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_01@69b794e2]" started-at="2020-05-16T10:27:03Z" name="checkStatusLine" finished-at="2020-05-16T10:27:03Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS07.TC_GetUserBalance_01 -->
      <class name="G2.Project.Test.TS07.TC_GetUserBalance_02">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_02@3f200884]" started-at="2020-05-16T10:27:03Z" name="setup" finished-at="2020-05-16T10:27:03Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCGetUserBalance02(java.lang.String)[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_02@3f200884]" started-at="2020-05-16T10:27:03Z" name="setUpTCGetUserBalance02" finished-at="2020-05-16T10:27:04Z" duration-ms="901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MjgxOTA1MjE4OTU4IiwiZXhwIjoxNTg5NDQ3NDg3LCJpYXQiOjE1ODk0Mjk0ODd9.Qtiv_EvtO81s14UxWyBYf7XTwrMlOhigpnQNtQE-BR8f0Xb1I5onftFT-xDFRU2TXv9VMheQpknSH_o8OD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCGetUserBalance02 -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_02@3f200884]" started-at="2020-05-16T10:27:04Z" name="checkResponseBody" finished-at="2020-05-16T10:27:04Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_02@3f200884]" started-at="2020-05-16T10:27:04Z" name="checkResponseTime" finished-at="2020-05-16T10:27:04Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_02@3f200884]" started-at="2020-05-16T10:27:04Z" name="checkStatusCode" finished-at="2020-05-16T10:27:04Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS07.TC_GetUserBalance_02@3f200884]" started-at="2020-05-16T10:27:04Z" name="checkStatusLine" finished-at="2020-05-16T10:27:04Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS07.TC_GetUserBalance_02 -->
    </test> <!-- GetUserBalanceResponseTest -->
  </suite> <!-- Verify GetUserBalance Functionality -->
  <suite started-at="2020-05-16T10:27:06Z" name="Verify GetPaymentMethod Functionality" finished-at="2020-05-16T10:27:08Z" duration-ms="2319">
    <groups>
    </groups>
    <test started-at="2020-05-16T10:27:06Z" name="GetPaymentMethodResponseTest" finished-at="2020-05-16T10:27:08Z" duration-ms="2319">
      <class name="G2.Project.Test.TS09.TC_GetPaymentMethod_01">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_01@491666ad]" started-at="2020-05-16T10:27:06Z" name="setup" finished-at="2020-05-16T10:27:06Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCGetPaymentMethod01()[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_01@491666ad]" started-at="2020-05-16T10:27:06Z" name="setUpTCGetPaymentMethod01" finished-at="2020-05-16T10:27:07Z" duration-ms="1267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCGetPaymentMethod01 -->
        <test-method signature="checkDataBody()[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_01@491666ad]" started-at="2020-05-16T10:27:07Z" name="checkDataBody" finished-at="2020-05-16T10:27:07Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDataBody -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_01@491666ad]" started-at="2020-05-16T10:27:07Z" name="checkHeader" finished-at="2020-05-16T10:27:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_01@491666ad]" started-at="2020-05-16T10:27:07Z" name="checkResponseBody" finished-at="2020-05-16T10:27:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_01@491666ad]" started-at="2020-05-16T10:27:07Z" name="checkResponseTime" finished-at="2020-05-16T10:27:07Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_01@491666ad]" started-at="2020-05-16T10:27:07Z" name="checkStatusCode" finished-at="2020-05-16T10:27:07Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_01@491666ad]" started-at="2020-05-16T10:27:07Z" name="checkStatusLine" finished-at="2020-05-16T10:27:07Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS09.TC_GetPaymentMethod_01 -->
      <class name="G2.Project.Test.TS09.TC_GetPaymentMethod_02">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_02@176d53b2]" started-at="2020-05-16T10:27:07Z" name="setup" finished-at="2020-05-16T10:27:07Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setUpTCGetPaymentMethod02(java.lang.String)[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_02@176d53b2]" started-at="2020-05-16T10:27:07Z" name="setUpTCGetPaymentMethod02" finished-at="2020-05-16T10:27:08Z" duration-ms="1015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiI2MjgxOTA1MjE4OTU4IiwiZXhwIjoxNTg5NDQ3NDg3LCJpYXQiOjE1ODk0Mjk0ODd9.Qtiv_EvtO81s14UxWyBYf7XTwrMlOhigpnQNtQE-BR8f0Xb1I5onftFT-xDFRU2TXv9VMheQpknSH_o8OD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTCGetPaymentMethod02 -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_02@176d53b2]" started-at="2020-05-16T10:27:08Z" name="checkResponseBody" finished-at="2020-05-16T10:27:08Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_02@176d53b2]" started-at="2020-05-16T10:27:08Z" name="checkResponseTime" finished-at="2020-05-16T10:27:08Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_02@176d53b2]" started-at="2020-05-16T10:27:08Z" name="checkStatusCode" finished-at="2020-05-16T10:27:08Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS09.TC_GetPaymentMethod_02@176d53b2]" started-at="2020-05-16T10:27:08Z" name="checkStatusLine" finished-at="2020-05-16T10:27:08Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS09.TC_GetPaymentMethod_02 -->
    </test> <!-- GetPaymentMethodResponseTest -->
  </suite> <!-- Verify GetPaymentMethod Functionality -->
  <suite started-at="2020-05-16T10:27:08Z" name="Verify Top Up Functionality" finished-at="2020-05-16T10:27:13Z" duration-ms="4583">
    <groups>
    </groups>
    <test started-at="2020-05-16T10:27:08Z" name="ConfirmMerchantTopupResponseTest" finished-at="2020-05-16T10:27:13Z" duration-ms="4583">
      <class name="G2.Project.Test.TS10.Setting">
        <test-method is-config="true" signature="SettingUp()[pri:0, instance:G2.Project.Test.TS10.Setting@770c2e6b]" started-at="2020-05-16T10:27:08Z" name="SettingUp" finished-at="2020-05-16T10:27:10Z" duration-ms="1196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
      </class> <!-- G2.Project.Test.TS10.Setting -->
      <class name="G2.Project.Test.TS10.TC_ConfirmMerchantTopup_01">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_01@61009542]" started-at="2020-05-16T10:27:12Z" name="setup" finished-at="2020-05-16T10:27:12Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_01@61009542]" started-at="2020-05-16T10:27:12Z" name="SettingUp" finished-at="2020-05-16T10:27:13Z" duration-ms="1113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_01@61009542]" started-at="2020-05-16T10:27:13Z" name="checkHeader" finished-at="2020-05-16T10:27:13Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_01@61009542]" started-at="2020-05-16T10:27:13Z" name="checkResponseBody" finished-at="2020-05-16T10:27:13Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_01@61009542]" started-at="2020-05-16T10:27:13Z" name="checkResponseTime" finished-at="2020-05-16T10:27:13Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_01@61009542]" started-at="2020-05-16T10:27:13Z" name="checkStatusCode" finished-at="2020-05-16T10:27:13Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_01@61009542]" started-at="2020-05-16T10:27:13Z" name="checkStatusLine" finished-at="2020-05-16T10:27:13Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS10.TC_ConfirmMerchantTopup_01 -->
      <class name="G2.Project.Test.TS10.TC_ConfirmMerchantTopup_02">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_02@1a052a00]" started-at="2020-05-16T10:27:10Z" name="setup" finished-at="2020-05-16T10:27:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_02@1a052a00]" started-at="2020-05-16T10:27:10Z" name="SettingUp" finished-at="2020-05-16T10:27:11Z" duration-ms="1109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_02@1a052a00]" started-at="2020-05-16T10:27:11Z" name="checkHeader" finished-at="2020-05-16T10:27:11Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_02@1a052a00]" started-at="2020-05-16T10:27:11Z" name="checkResponseBody" finished-at="2020-05-16T10:27:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_02@1a052a00]" started-at="2020-05-16T10:27:11Z" name="checkResponseTime" finished-at="2020-05-16T10:27:11Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_02@1a052a00]" started-at="2020-05-16T10:27:11Z" name="checkStatusCode" finished-at="2020-05-16T10:27:11Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_02@1a052a00]" started-at="2020-05-16T10:27:11Z" name="checkStatusLine" finished-at="2020-05-16T10:27:11Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS10.TC_ConfirmMerchantTopup_02 -->
      <class name="G2.Project.Test.TS10.TC_ConfirmMerchantTopup_03">
        <test-method is-config="true" signature="setup()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_03@4d826d77]" started-at="2020-05-16T10:27:11Z" name="setup" finished-at="2020-05-16T10:27:11Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="SettingUp()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_03@4d826d77]" started-at="2020-05-16T10:27:11Z" name="SettingUp" finished-at="2020-05-16T10:27:12Z" duration-ms="1110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SettingUp -->
        <test-method signature="checkHeader()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_03@4d826d77]" started-at="2020-05-16T10:27:12Z" name="checkHeader" finished-at="2020-05-16T10:27:12Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHeader -->
        <test-method signature="checkResponseBody()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_03@4d826d77]" started-at="2020-05-16T10:27:12Z" name="checkResponseBody" finished-at="2020-05-16T10:27:12Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method signature="checkResponseTime()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_03@4d826d77]" started-at="2020-05-16T10:27:12Z" name="checkResponseTime" finished-at="2020-05-16T10:27:12Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkStatusCode()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_03@4d826d77]" started-at="2020-05-16T10:27:12Z" name="checkStatusCode" finished-at="2020-05-16T10:27:12Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:G2.Project.Test.TS10.TC_ConfirmMerchantTopup_03@4d826d77]" started-at="2020-05-16T10:27:12Z" name="checkStatusLine" finished-at="2020-05-16T10:27:12Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- G2.Project.Test.TS10.TC_ConfirmMerchantTopup_03 -->
    </test> <!-- ConfirmMerchantTopupResponseTest -->
  </suite> <!-- Verify Top Up Functionality -->
</testng-results>
